

class BaseSimulation(object):

    def __init__(self):
        self._filename = None
        self._description = None


    @property
    def filename(self):
        if self._filename is None:
            return "lammps.in"
        else:
            return self._filename

    @filename.setter
    def filename(self, fn):
        if type(fn) != str:
            raise TypeError("`fn` must be a string")
        else:
            self._filename = fn

    @property
    def description(self):
        if self._description is None:
            return "<no description provided>"
        else:
            return self._description
    
    @description.setter
    def description(self, desc):
        if type(desc) != str:
            raise TypeError("`desc` must be a string")
        else:
            self._description = desc

    def _header(self):
        citation = "Automatically generated by cmstk: https://github.com/seatonullberg/cmstk"
        s = "# {}\n# {}\n\n".format(citation, self.description)
        return s

    def write(self, text):
        if type(text) != str:
            raise TypeError("`text` must be a string")
        
        with open(self.filename, "w") as f:
            f.write(self._header())
            f.write(text)